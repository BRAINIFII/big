Desc:
Apache Hive is a data warehousing and SQL-like query language for big data stored in the Hadoop Distributed File System (HDFS) or other storage systems. It allows for querying and managing large datasets using a SQL-like language called HiveQL. Hive allows to perform data summarization, querying, and analysis of large datasets stored in Hadoop. Hive also provides a way to perform data extract, transform and load (ETL) operations to prepare data for querying and analysis. Hive is built on top of Hadoop and provides a simple way for users to interact with big data stored in HDFS.


# Hive installation
1. Download hive-2.3.9
> sudo su hadoop
> wget https://downloads.apache.org/hive/hive-2.3.9/apache-hive-2.3.9-bin.tar.gz
> tar -xvzf apache-hive-2.3.9-bin.tar.gz
> mv apache-hive-2.3.9-bin /home/hadoop/hive

2. Extract, rename and move the downloaded zip file to the appropriate folder
3. Edit the .bashrc file
> nano ~/.bashrc
export HIVE_HOME=/home/hadoop/hive
export PATH=$PATH:$HIVE_HOME/bin

> source ~/.bashrc

4. Edit the core-site.xml and add the following properties within the existing Hadoop configuration

> nano $HADOOP_HOME/etc/hadoop/core-site.xml
<property>
        <name>hadoop.proxyuser.hadoop.groups</name>
        <value>*</value>
    </property>
    <property>
        <name>hadoop.proxyuser.hadoop.hosts</name>
        <value>*</value>
    </property>
    <property>
        <name>hadoop.proxyuser.server.hosts</name>
        <value>*</value>
    </property>
    <property>
        <name>hadoop.proxyuser.server.groups</name>
        <value>*</value>
</property>

> stop-dfs.sh
> stop-yarn.sh

5. Make the hdfs directory
> hadoop fs -mkdir /tmp
> hadoop fs -mkdir /tmp/user
> hadoop fs -mkdir /tmp/user/hive
> hadoop fs -mkdir /tmp/user/hive/warehouse
> hadoop fs -chmod g+w /tmp
> hadoop fs -chmod g+w /tmp/user
> hadoop fs -chmod g+w /tmp/user/hive
> hadoop fs -chmod g+w /tmp/user/hive/warehouse
> schematool -dbType derby -initSchema
> hiveserver2

On new terminal
> beeline -n hadoop -u jdbc:hive2://localhost:10000


# Create and store data
1. Create a new database
> create database test;

# verify with
> show databases;

2. Create a new table
> create table test.emp (id int, name string);

3. Insert a few tuples/records in the created table
> insert into test.emp VALUES(1, 'Andy');
> insert into test.emp VALUES(2, 'Ramy');
> insert into test.emp VALUES(3, 'Youka');

4. Display the table data
> select * from test.emp